/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 28 15:47:26 GMT 2019
 */

package movement;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import movement.RandomOrbitalMovement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import robocode.AdvancedRobot;
import robocode.ScannedRobotEvent;
import robocode.robotinterfaces.peer.IBasicRobotPeer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RandomOrbitalMovement_ESTest extends RandomOrbitalMovement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RandomOrbitalMovement randomOrbitalMovement0 = new RandomOrbitalMovement((AdvancedRobot) null);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("<]{eI", 0.0, 800.0, 0.0, 0.0, 3.0, false);
      // Undeclared exception!
      try { 
        randomOrbitalMovement0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.RandomOrbitalMovement", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-2654.8728844290945), (-2654.8728844290945)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((-2654.8728844290945)).when(iBasicRobotPeer0).getX();
      doReturn((-2654.8728844290945)).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      RandomOrbitalMovement randomOrbitalMovement0 = new RandomOrbitalMovement(advancedRobot0);
      Random.setNextRandom((-2102744407));
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("movement.RandomOrbitalMovement", (-2654.8728844290945), 1913.0634467836303, 1913.0634467836303, 1913.0634467836303, (-2654.8728844290945), true);
      // Undeclared exception!
      try { 
        randomOrbitalMovement0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$169541367 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode.AdvancedRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1625.1195458507314), 0.0).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((-1625.1195458507314)).when(iBasicRobotPeer0).getX();
      doReturn((-1625.1195458507314)).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      RandomOrbitalMovement randomOrbitalMovement0 = new RandomOrbitalMovement(advancedRobot0);
      Random.setNextRandom((-66));
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("robocode.MouseWheelMovedvent", 940.1261656492072, 940.1261656492072, 940.1261656492072, 940.1261656492072, 940.1261656492072);
      // Undeclared exception!
      try { 
        randomOrbitalMovement0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$169541367 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode.AdvancedRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1625.1195458507314), (-1625.1195458507314)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((-1625.1195458507314)).when(iBasicRobotPeer0).getX();
      doReturn((-1625.1195458507314)).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      RandomOrbitalMovement randomOrbitalMovement0 = new RandomOrbitalMovement(advancedRobot0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("robocode.MouseWheelMovedvent", 940.1261656492072, 940.1261656492072, 940.1261656492072, 940.1261656492072, 940.1261656492072);
      // Undeclared exception!
      try { 
        randomOrbitalMovement0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$169541367 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode.AdvancedRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(120.70003495446089, 120.70003495446089).when(iBasicRobotPeer0).getBodyHeading();
      doReturn(120.70003495446089).when(iBasicRobotPeer0).getX();
      doReturn(120.70003495446089).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      RandomOrbitalMovement randomOrbitalMovement0 = new RandomOrbitalMovement(advancedRobot0);
      // Undeclared exception!
      try { 
        randomOrbitalMovement0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$169541367 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode.AdvancedRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      RandomOrbitalMovement randomOrbitalMovement0 = new RandomOrbitalMovement(advancedRobot0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent((String) null, 0.0, 0.0, 0.0, (-974.0), (-1606.32079676), true);
      // Undeclared exception!
      try { 
        randomOrbitalMovement0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the getHeadingRadians() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }
}
