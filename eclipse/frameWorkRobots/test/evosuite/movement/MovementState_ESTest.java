/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 28 15:59:15 GMT 2019
 */

package movement;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import movement.RandomOrbitalMovement;
import movement.WaveSurfing;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import robocode.AdvancedRobot;
import robocode.ScannedRobotEvent;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MovementState_ESTest extends MovementState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RandomOrbitalMovement randomOrbitalMovement0 = new RandomOrbitalMovement((AdvancedRobot) null);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("", 0.0, (-231.5446995594), (-231.5446995594), 0.0, 0.0);
      // Undeclared exception!
      try { 
        randomOrbitalMovement0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.RandomOrbitalMovement", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      RandomOrbitalMovement randomOrbitalMovement0 = new RandomOrbitalMovement(advancedRobot0);
      randomOrbitalMovement0.run();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("N0S<v}p:5^", 47, 1095.137601156472, (-1047.61691713), (-1.0), 0.0, true);
      // Undeclared exception!
      try { 
        waveSurfing0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the getX() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }
}
