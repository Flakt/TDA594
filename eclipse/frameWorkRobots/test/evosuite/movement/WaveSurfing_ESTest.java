/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 28 15:36:24 GMT 2019
 */

package movement;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.util.ArrayList;
import movement.WaveSurfing;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import robocode.AdvancedRobot;
import robocode.Bullet;
import robocode.HitByBulletEvent;
import robocode.ScannedRobotEvent;
import robocode.robotinterfaces.peer.IBasicRobotPeer;
import utils.EnemyWave;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WaveSurfing_ESTest extends WaveSurfing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1306.84116680875)).when(iBasicRobotPeer0).getBodyHeading();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      // Undeclared exception!
      try { 
        WaveSurfing.setBackAsFront(advancedRobot0, 0.09);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$269459855 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1306.84116680875), (-1306.84116680875)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((double)47, 100.0).when(iBasicRobotPeer0).getVelocity();
      doReturn((double)47).when(iBasicRobotPeer0).getX();
      doReturn((double)47).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      waveSurfing0.run();
      waveSurfing0.onScannedRobot(scannedRobotEvent0);
      EnemyWave enemyWave0 = new EnemyWave();
      enemyWave0.direction = 11;
      enemyWave0.fireLocation = waveSurfing0._myLocation;
      double double0 = waveSurfing0.checkDanger(enemyWave0, 11);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1306.84116680875)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((double)47).when(iBasicRobotPeer0).getVelocity();
      doReturn((double)47).when(iBasicRobotPeer0).getX();
      doReturn((double)47).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("K@I", 100.0, 47, 160.0, 47, 160.0, false);
      waveSurfing0.run();
      waveSurfing0.onScannedRobot(scannedRobotEvent0);
      assertEquals(100.0, scannedRobotEvent0.getLife(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1306.84116680875)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((double)47).when(iBasicRobotPeer0).getVelocity();
      doReturn((-2909.745291)).when(iBasicRobotPeer0).getX();
      doReturn((-2909.745291)).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("K@#I#", 100.0, 47, 160.0, 0.09, 160.0, true);
      // Undeclared exception!
      try { 
        waveSurfing0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      ArrayList<Point2D.Double> arrayList0 = new ArrayList<Point2D.Double>();
      arrayList0.add((Point2D.Double) null);
      waveSurfing0._enemyWaves = arrayList0;
      // Undeclared exception!
      try { 
        waveSurfing0.doSurfing();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = WaveSurfing.maxEscapeAngle(442.542399);
      assertEquals(0.018078348659055072, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = WaveSurfing.maxEscapeAngle((-209.781));
      assertEquals((-0.03814425666980145), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = WaveSurfing.limit(0.001, 0.001, 0.001);
      assertEquals(0.001, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = WaveSurfing.limit((-1008.460794547), 0.0, (-1008.460794547));
      assertEquals((-1008.460794547), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EnemyWave enemyWave0 = new EnemyWave();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      enemyWave0.fireLocation = point2D_Double0;
      int int0 = WaveSurfing.getFactorIndex(enemyWave0, enemyWave0.fireLocation);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EnemyWave enemyWave0 = new EnemyWave();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      enemyWave0.bulletVelocity = (double) (-1851L);
      enemyWave0.fireLocation = point2D_Double0;
      int int0 = WaveSurfing.getFactorIndex(enemyWave0, enemyWave0.fireLocation);
      assertEquals(23, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1306.84116680875), (-1306.84116680875)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((double)47, 100.0).when(iBasicRobotPeer0).getVelocity();
      doReturn((double)47).when(iBasicRobotPeer0).getX();
      doReturn((double)47).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      scannedRobotEvent0.setTime(0L);
      int int0 = (-34);
      waveSurfing0.run();
      scannedRobotEvent0.setPriority((-34));
      waveSurfing0.onScannedRobot(scannedRobotEvent0);
      EnemyWave enemyWave0 = new EnemyWave();
      enemyWave0.fireLocation = waveSurfing0._myLocation;
      scannedRobotEvent0.setTime(0);
      waveSurfing0.checkDanger(enemyWave0, 0);
      waveSurfing0.getClosestSurfableWave();
      double double0 = 563.71513729;
      AdvancedRobot advancedRobot1 = new AdvancedRobot();
      waveSurfing0.doSurfing();
      // Undeclared exception!
      try { 
        advancedRobot1.fireBullet(100.0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the fireBullet() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = WaveSurfing.bulletVelocity(1534.010451605);
      assertEquals((-4582.031354815001), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Point2D.Double point2D_Double1 = WaveSurfing.project(point2D_Double0, (-4628.2187817), 2775.37301);
      double double0 = WaveSurfing.absoluteBearing(point2D_Double0, point2D_Double1);
      assertEquals(2.48878969135487, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Point2D.Double point2D_Double1 = WaveSurfing.project(point2D_Double0, 2.3616435062274874, 2.3616435062274874);
      double double0 = WaveSurfing.absoluteBearing(point2D_Double1, point2D_Double0);
      assertEquals((-0.7799491473623058), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add((String) null);
      waveSurfing0._enemyWaves = arrayList0;
      // Undeclared exception!
      try { 
        waveSurfing0.updateWaves();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the getTime() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      // Undeclared exception!
      try { 
        waveSurfing0.updateWaves();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      // Undeclared exception!
      try { 
        WaveSurfing.setBackAsFront(advancedRobot0, (-1238.35785));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the getHeadingRadians() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        WaveSurfing.setBackAsFront((AdvancedRobot) null, 360.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WaveSurfing waveSurfing0 = new WaveSurfing((AdvancedRobot) null);
      EnemyWave enemyWave0 = new EnemyWave();
      // Undeclared exception!
      try { 
        waveSurfing0.predictPosition(enemyWave0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("O>\"D/{<$Ne*#Rb]TP", 174.9927423455381, 0.0, 100.0, 100.0, 160.0);
      // Undeclared exception!
      try { 
        waveSurfing0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the getX() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("");
      waveSurfing0._enemyWaves = arrayList0;
      Bullet bullet0 = new Bullet(100.0, 47, 100.0, 100.0, "", (String) null, false, 47);
      HitByBulletEvent hitByBulletEvent0 = new HitByBulletEvent(3706.1123969, bullet0);
      // Undeclared exception!
      try { 
        waveSurfing0.onHitByBullet(hitByBulletEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to utils.EnemyWave
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      EnemyWave enemyWave0 = new EnemyWave();
      // Undeclared exception!
      try { 
        waveSurfing0.logHit(enemyWave0, (Point2D.Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      // Undeclared exception!
      try { 
        waveSurfing0.getClosestSurfableWave();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        WaveSurfing.absoluteBearing((Point2D.Double) null, (Point2D.Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("");
      waveSurfing0._enemyWaves = arrayList0;
      // Undeclared exception!
      try { 
        waveSurfing0.getClosestSurfableWave();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to utils.EnemyWave
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WaveSurfing waveSurfing0 = new WaveSurfing((AdvancedRobot) null);
      waveSurfing0.run();
      waveSurfing0.updateWaves();
      assertEquals(100.0, WaveSurfing._oppEnergy, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      // Undeclared exception!
      try { 
        WaveSurfing.getFactorIndex((EnemyWave) null, waveSurfing0._myLocation);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(3777.5943779843, 0);
      double double0 = WaveSurfing.absoluteBearing(point2D_Double0, point2D_Double0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        WaveSurfing.project((Point2D.Double) null, 2379.381618398, (-2873.22367877));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double double0 = WaveSurfing.limit((-2295.69532), 8.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(0.09).when(iBasicRobotPeer0).getBodyHeading();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      // Undeclared exception!
      try { 
        WaveSurfing.setBackAsFront(advancedRobot0, (-2921.6720767494744));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$269459855 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(197.55844355608488).when(iBasicRobotPeer0).getBodyHeading();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      // Undeclared exception!
      try { 
        WaveSurfing.setBackAsFront(advancedRobot0, 0.09);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$269459855 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1306.8)).when(iBasicRobotPeer0).getBodyHeading();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      // Undeclared exception!
      try { 
        WaveSurfing.setBackAsFront(advancedRobot0, (-10.873));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$269459855 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1273.5302589925677)).when(iBasicRobotPeer0).getBodyHeading();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      // Undeclared exception!
      try { 
        WaveSurfing.setBackAsFront(advancedRobot0, (-1273.5302589925677));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$269459855 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1306.84116680875), (-1306.84116680875)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((double)47, 100.0).when(iBasicRobotPeer0).getVelocity();
      doReturn((double)47).when(iBasicRobotPeer0).getX();
      doReturn((double)47).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      waveSurfing0.run();
      waveSurfing0.onScannedRobot(scannedRobotEvent0);
      EnemyWave enemyWave0 = new EnemyWave();
      enemyWave0.fireLocation = waveSurfing0._myLocation;
      enemyWave0.bulletVelocity = 0.6;
      double double0 = waveSurfing0.checkDanger(enemyWave0, 11);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      WaveSurfing waveSurfing0 = new WaveSurfing((AdvancedRobot) null);
      waveSurfing0.run();
      HitByBulletEvent hitByBulletEvent0 = new HitByBulletEvent(18.0, (Bullet) null);
      waveSurfing0.onHitByBullet(hitByBulletEvent0);
      assertEquals(0, hitByBulletEvent0.getPriority());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      ArrayList<Point2D.Double> arrayList0 = new ArrayList<Point2D.Double>();
      arrayList0.add((Point2D.Double) null);
      waveSurfing0._enemyWaves = arrayList0;
      Bullet bullet0 = new Bullet(362.80909226, 100.0, 160.0, 160.0, "robocode.RoundEndedEvent", "t. F7m=bQXV", true, 15);
      HitByBulletEvent hitByBulletEvent0 = new HitByBulletEvent(1.8663583574561997, bullet0);
      // Undeclared exception!
      try { 
        waveSurfing0.onHitByBullet(hitByBulletEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EnemyWave enemyWave0 = new EnemyWave();
      Point2D.Double point2D_Double0 = new Point2D.Double(0L, 0.0);
      enemyWave0.fireLocation = point2D_Double0;
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      waveSurfing0.logHit(enemyWave0, point2D_Double0);
      assertEquals(0.0, enemyWave0.bulletVelocity, 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("");
      waveSurfing0._enemyWaves = arrayList0;
      // Undeclared exception!
      try { 
        waveSurfing0.doSurfing();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to utils.EnemyWave
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("");
      waveSurfing0._enemyWaves = arrayList0;
      // Undeclared exception!
      try { 
        waveSurfing0.updateWaves();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to utils.EnemyWave
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(160.0).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((-1121.868141937086)).when(iBasicRobotPeer0).getVelocity();
      doReturn(3.141592653589793).when(iBasicRobotPeer0).getX();
      doReturn((-1286.2079849066974)).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("K@#I#", 100.0, 47, 160.0, 160.0, 160.0, true);
      // Undeclared exception!
      try { 
        waveSurfing0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("movement.WaveSurfing", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double double0 = WaveSurfing.bulletVelocity(0.0);
      assertEquals(20.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      WaveSurfing waveSurfing0 = new WaveSurfing(advancedRobot0);
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-1306.84116680875), (-1306.84116680875)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((double)47, 100.0).when(iBasicRobotPeer0).getVelocity();
      doReturn((double)47).when(iBasicRobotPeer0).getX();
      doReturn((double)47).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      waveSurfing0.run();
      waveSurfing0.onScannedRobot(scannedRobotEvent0);
      EnemyWave enemyWave0 = new EnemyWave();
      // Undeclared exception!
      try { 
        waveSurfing0.checkDanger(enemyWave0, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
