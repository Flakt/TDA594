/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 28 15:55:20 GMT 2019
 */

package utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import utils.GFTUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GFTUtils_ESTest extends GFTUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = GFTUtils.minMax(1, 1, (-602));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = GFTUtils.sign(3490.24259366);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = GFTUtils.minMax(1, 84, 84);
      assertEquals(84, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = GFTUtils.minMax((-2822), (-2822), (-2822));
      assertEquals((-2822), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = GFTUtils.bulletVelocity(7623.76);
      assertEquals((-22851.28), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Point2D.Float point2D_Float0 = new Point2D.Float();
      double double0 = GFTUtils.absoluteBearing(point2D_Float0, point2D_Float0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-1156.74753122), (-1156.74753122));
      Point2D point2D0 = GFTUtils.project(point2D_Double0, 1, (-1156.74753122));
      double double0 = GFTUtils.absoluteBearing(point2D0, point2D_Double0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(77.57397, 77.57397);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      double double0 = GFTUtils.absoluteBearing(point2D_Double0, point2D_Float0);
      assertEquals((-2.356194490192345), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = GFTUtils.sign((-1156.74753122));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = GFTUtils.sign(0.0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = GFTUtils.minMax(0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        GFTUtils.absoluteBearing((Point2D) null, (Point2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("utils.GFTUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = GFTUtils.bulletVelocity((-1165.33));
      assertEquals(3515.99, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        GFTUtils.project((Point2D) null, (-3610.015145161188), (-3610.015145161188));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("utils.GFTUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GFTUtils gFTUtils0 = new GFTUtils();
  }
}
