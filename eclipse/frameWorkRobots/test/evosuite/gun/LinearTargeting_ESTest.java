/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 28 16:00:38 GMT 2019
 */

package gun;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import robocode.AdvancedRobot;
import robocode.ScannedRobotEvent;
import robocode.robotinterfaces.peer.IBasicRobotPeer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinearTargeting_ESTest extends LinearTargetingGun_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-4443.9)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((-4443.9)).when(iBasicRobotPeer0).getEnergy();
      doReturn((-4443.9)).when(iBasicRobotPeer0).getGunHeading();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("", (-4443.9), (-4443.9), 3.141592653589793, (-4443.9), 2419.232);
      // Undeclared exception!
      try { 
        linearTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$966409895 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((-772.9553399320843)).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((-772.9553399320843)).when(iBasicRobotPeer0).getEnergy();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      // Undeclared exception!
      try { 
        linearTargeting0.onScannedRobot((ScannedRobotEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("gun.LinearTargetingGun", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      LinearTargeting linearTargeting0 = new LinearTargeting(advancedRobot0);
      // Undeclared exception!
      try { 
        linearTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the getEnergy() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }
}
