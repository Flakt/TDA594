/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 28 15:46:00 GMT 2019
 */

package gun;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import gun.CircularTargeting;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import robocode.AdvancedRobot;
import robocode.ScannedRobotEvent;
import robocode.robotinterfaces.peer.IBasicRobotPeer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CircularTargeting_ESTest extends CircularTargeting_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(512.0).when(iBasicRobotPeer0).getBattleFieldHeight();
      doReturn(512.0).when(iBasicRobotPeer0).getBattleFieldWidth();
      doReturn(512.0).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((-1647.122679)).when(iBasicRobotPeer0).getEnergy();
      doReturn(697.1623078654).when(iBasicRobotPeer0).getRadarHeading();
      doReturn(0.0, (-2785.986941014058), 697.1623078654).when(iBasicRobotPeer0).getX();
      doReturn(5888.822713788, 1.5707963267948966, 0.0).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      CircularTargeting circularTargeting0 = new CircularTargeting(advancedRobot0);
      CircularTargeting.oldEnemyHeading = 270.0;
      // Undeclared exception!
      try { 
        circularTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$589634465 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(2211.752654987578).when(iBasicRobotPeer0).getBattleFieldHeight();
      doReturn(2211.752654987578).when(iBasicRobotPeer0).getBattleFieldWidth();
      doReturn(2211.752654987578).when(iBasicRobotPeer0).getBodyHeading();
      doReturn(2211.752654987578).when(iBasicRobotPeer0).getEnergy();
      doReturn(2211.752654987578).when(iBasicRobotPeer0).getRadarHeading();
      doReturn(147.6320752, 147.6320752, 147.6320752).when(iBasicRobotPeer0).getX();
      doReturn(147.6320752, 41.63960674474567, 2211.752654987578).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      CircularTargeting circularTargeting0 = new CircularTargeting(advancedRobot0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("", 2193.181527663921, (-4994.524644936785), 77.0, (-4994.524644936785), (-1.0));
      // Undeclared exception!
      try { 
        circularTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$589634465 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CircularTargeting circularTargeting0 = new CircularTargeting((AdvancedRobot) null);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent("}LGnnx", 1563.39482669, 1.0, (-3320.463596135917), 1.0, (-1354.688646));
      // Undeclared exception!
      try { 
        circularTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("gun.CircularTargeting", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(18.0).when(iBasicRobotPeer0).getBattleFieldHeight();
      doReturn(3344.5304949805304).when(iBasicRobotPeer0).getBattleFieldWidth();
      doReturn(3344.5304949805304).when(iBasicRobotPeer0).getBodyHeading();
      doReturn(3344.5304949805304).when(iBasicRobotPeer0).getEnergy();
      doReturn(3344.5304949805304).when(iBasicRobotPeer0).getRadarHeading();
      doReturn(18.0, 18.0, 3344.5304949805304).when(iBasicRobotPeer0).getX();
      doReturn(18.0, 3344.5304949805304, 3344.5304949805304).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      CircularTargeting circularTargeting0 = new CircularTargeting(advancedRobot0);
      // Undeclared exception!
      try { 
        circularTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$589634465 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn(2243.3).when(iBasicRobotPeer0).getBattleFieldHeight();
      doReturn(2243.3).when(iBasicRobotPeer0).getBattleFieldWidth();
      doReturn(2243.3).when(iBasicRobotPeer0).getBodyHeading();
      doReturn(2243.3).when(iBasicRobotPeer0).getEnergy();
      doReturn(2243.3).when(iBasicRobotPeer0).getRadarHeading();
      doReturn(2243.3, 2243.3, 2243.3).when(iBasicRobotPeer0).getX();
      doReturn(2243.3, 89.98895403012638, 2243.3).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      CircularTargeting circularTargeting0 = new CircularTargeting(advancedRobot0);
      // Undeclared exception!
      try { 
        circularTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$589634465 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      IBasicRobotPeer iBasicRobotPeer0 = mock(IBasicRobotPeer.class, new ViolatedAssumptionAnswer());
      doReturn((double)1L).when(iBasicRobotPeer0).getBattleFieldHeight();
      doReturn((double)1L).when(iBasicRobotPeer0).getBattleFieldWidth();
      doReturn((double)1L).when(iBasicRobotPeer0).getBodyHeading();
      doReturn((double)1L).when(iBasicRobotPeer0).getEnergy();
      doReturn((double)1L).when(iBasicRobotPeer0).getRadarHeading();
      doReturn(538.59, 538.59, (double)1L).when(iBasicRobotPeer0).getX();
      doReturn(538.59, (double)1L, (double)1L).when(iBasicRobotPeer0).getY();
      advancedRobot0.setPeer(iBasicRobotPeer0);
      CircularTargeting circularTargeting0 = new CircularTargeting(advancedRobot0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent();
      // Undeclared exception!
      try { 
        circularTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // robocode.robotinterfaces.peer.IBasicRobotPeer$MockitoMock$589634465 cannot be cast to robocode.robotinterfaces.peer.IAdvancedRobotPeer
         //
         verifyException("robocode._AdvancedRadiansRobot", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AdvancedRobot advancedRobot0 = new AdvancedRobot();
      CircularTargeting circularTargeting0 = new CircularTargeting(advancedRobot0);
      ScannedRobotEvent scannedRobotEvent0 = new ScannedRobotEvent(".e_&su:", (-2371.8232937), 0.0, (-2371.8232937), 18.0, 18.0, false);
      // Undeclared exception!
      try { 
        circularTargeting0.onScannedRobot(scannedRobotEvent0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // You cannot call the getEnergy() method before your run() method is called, or you are using a Robot object that the game doesn't know about.
         //
         verifyException("robocode._RobotBase", e);
      }
  }
}
